{"version":3,"sources":["script.js"],"names":["word","randomNum","Math","floor","random","length","wordPicked","wrongGuess","underscores","console","log","makeUnderscore","document","getElementsByClassName","wrong","getUnderscores","i","push","innerHTML","join","addEventListener","event","keyed","String","fromCharCode","keyCode","indexOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAMA,IAAI,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,UAA7B,EAAyC,WAAzC,CAAb,EACA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAhC,CAAhB;AACA,IAAIC,UAAU,GAAGN,IAAI,CAACC,SAAD,CAArB,EAEA;;AACA,IAAIM,UAAU,GAAG,EAAjB;AACA,IAAIC,WAAW,GAAG,EAAlB;AAGAC,OAAO,CAACC,GAAR,CAAYJ,UAAZ,GAEA;;AACA,IAAIK,cAAc,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,CAArB;AACA,IAAIC,KAAK,GAAGF,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,CAAZ,EAEA;;AACA,IAAIE,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC1B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,UAAU,CAACD,MAA/B,EAAuCW,CAAC,EAAxC,EAA4C;AAC3CR,IAAAA,WAAW,CAACS,IAAZ,CAAiB,KAAjB;AACAN,IAAAA,cAAc,CAAC,CAAD,CAAd,CAAkBO,SAAlB,GAA8BV,WAAW,CAACW,IAAZ,CAAiB,GAAjB,CAA9B;AACA;;AACD,SAAOX,WAAP;AACA,CAND;;AAQAC,OAAO,CAACC,GAAR,CAAYK,cAAc,EAA1B,GACA;;AACAH,QAAQ,CAACQ,gBAAT,CAA0B,UAA1B,EAAsC,UAACC,KAAD,EAAW;AAChD,MAAIC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBH,KAAK,CAACI,OAA1B,CAAZ;;AACA,MAAInB,UAAU,CAACoB,OAAX,CAAmBJ,KAAnB,IAA4B,CAAC,CAA7B,IAAkCd,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAzD,EAA8D;AAC7D,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,UAAU,CAACD,MAA/B,EAAuCW,CAAC,EAAxC,EAA4C;AAC3C;AACA,UAAIV,UAAU,CAACU,CAAD,CAAV,IAAiBM,KAArB,EAA4B;AAC3Bd,QAAAA,WAAW,CAACQ,CAAD,CAAX,GAAiBM,KAAjB;AACAX,QAAAA,cAAc,CAAC,CAAD,CAAd,CAAkBO,SAAlB,GAA8BV,WAAW,CAACW,IAAZ,CAAiB,GAAjB,CAA9B;AACA;AACD;AACD,GARD,MASK;AACJZ,IAAAA,UAAU,CAACU,IAAX,CAAgBK,KAAhB;AACAR,IAAAA,KAAK,CAAC,CAAD,CAAL,CAASI,SAAT,GAAqBX,UAAU,CAACY,IAAX,CAAgB,GAAhB,CAArB;AACA;;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,CAjBD,GAuBA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.75da7f30.map","sourceRoot":"..","sourcesContent":["// create array of words\nconst word = ['horse', 'pizza', 'orange', 'sprinter', 'hilarious']\n// select random word\nlet randomNum = Math.floor(Math.random() * word.length)\nlet wordPicked = word[randomNum]\n\n// create empty arrays\nlet wrongGuess = []\nlet underscores = []\n\n\nconsole.log(wordPicked)\n\n// DOM Manipulation\nlet makeUnderscore = document.getElementsByClassName('underscore')\nlet wrong = document.getElementsByClassName('wrongGuess')\n\n// populate underscores based on word length\nlet getUnderscores = () => {\n\tfor (let i = 0; i < wordPicked.length; i++) {\n\t\tunderscores.push(' _ ')\n\t\tmakeUnderscore[0].innerHTML = underscores.join(' ')\n\t}\n\treturn underscores\n}\n\nconsole.log(getUnderscores())\n// listen for letter\ndocument.addEventListener('keypress', (event) => {\n\tlet keyed = String.fromCharCode(event.keyCode)\n\tif (wordPicked.indexOf(keyed) > -1 && underscores[0] !== '_') {\n\t\tfor (let i = 0; i < wordPicked.length; i++) {\n\t\t\t// if the letter is correct replace underscore\n\t\t\tif (wordPicked[i] == keyed) {\n\t\t\t\tunderscores[i] = keyed\n\t\t\t\tmakeUnderscore[0].innerHTML = underscores.join(' ')\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\twrongGuess.push(keyed)\n\t\twrong[0].innerHTML = wrongGuess.join(' ')\n\t}\n\t\tconsole.log(underscores)\n\tconsole.log(keyed)\n})\n\n\n\n\n\n// if the word has been guessed, alert you win\n// if letter is incorrect and hasn't been guessed before, add to wrong guesses\n// if letter is incorrect and hasn't been guesses before, draw next portion of man\n// if man is complete, alert you lost\n// if play again is pressed, clear wrong guesses\n// if play again is pressed, pick new random word\n// if play again is pressed, populate underscores based on word length"]}